body {
    .ui-inputtext {
        color: $inputTextColor;
        font-size: $fontSize;
        background: $inputBgColor;
        padding: $inputPadding;
        border: 1px solid $inputBorderColor;
        @include transition(box-shadow $transitionDuration, border-color $transitionDuration);
        @include border-radius($borderRadius);
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;

        &:enabled:hover:not(.ui-state-error) {
            border-color: $inputHoverBorderColor;
        }

        &:enabled:focus:not(.ui-state-error) {
            @include focused-input();
        }

        &.ui-state-disabled, &:disabled {
            @include disabled-input();
        }

        &.ng-dirty.ng-invalid {
            border-color: $errorColor;

            &:hover {
                border-color: $errorColor;
            }

            &:focus {
                border-color: $errorColor;
                box-shadow: none;
            }

            &:active {
                border-color: $errorColor;
            }

        }
    }

    .ui-button {
        color: $primaryButtonTextColor;
        background-color: $primaryButtonBgColor;
        border: 1px solid transparent;
        font-size: $fontSize;
        @include transition(background-color $transitionDuration,box-shadow $transitionDuration);

        &:enabled:focus {
            outline: 0 none;
            @include shadow(0 0 0 0.2rem $primaryButtonFocusBorderShadow);
        }

        &:enabled:active {
            background-color: $primaryButtonActiveBgColor;
            border-color: $primaryButtonActiveBorderColor;
        }

        &:enabled:hover {
            background-color: $primaryButtonHoverBgColor;
            border-color: $primaryButtonHoverBorderColor;
        }

        &.ui-state-disabled, &:disabled {
            background-color: $primaryColor;
            @include opacity(.65);
        }

        &.ui-button-text-only {
            .ui-button-text {
                padding: 6px 12px;
            }
        }

        &.ui-button-text-icon-left {
            .ui-button-text {
                padding: 6px 12px 6px 28px;
            }
        }

        &.ui-button-text-icon-right {
            .ui-button-text {
                padding: 6px 28px 6px 12px;
            }
        }

        &.ui-button-icon-only {
            width: 2.143em;

            .ui-button-text {
                padding: 6px;
            }
        }

        &.secondary-btn {
            color: $secondaryButtonTextColor;
            background-color: $secondaryButtonBgColor;
            border-color: $secondaryButtonBorderColor;

            &:enabled:hover {
                background-color: $secondaryButtonHoverBgColor;
                border-color: $secondaryButtonHoverBorderColor;
            }

            &:enabled:focus {
                outline: 0 none;
                @include shadow(0 0 0 0.2rem $secondaryButtonFocusBorderShadow);
            }

            &:enabled:active {
                background-color: $secondaryButtonActiveBgColor;
                border-color: $secondaryButtonActiveBorderColor;
            }
        }
    }

    .ui-button.ui-state-default.ui-button-secondary, .ui-buttonset.ui-button-secondary > .ui-button.ui-state-default  {
        color: $secondaryButtonTextColor;
        background-color: $secondaryButtonBgColor;
        border-color: $secondaryButtonBorderColor;

        &:enabled:hover {
            background-color: $secondaryButtonHoverBgColor;
            border-color: $secondaryButtonHoverBorderColor;
        }

        &:enabled:focus {
            outline: 0 none;
            @include shadow(0 0 0 0.2rem $secondaryButtonFocusBorderShadow);
        }

        &:enabled:active {
            background-color: $secondaryButtonActiveBgColor;
            border-color: $secondaryButtonActiveBorderColor;
        }
    }

    .success-btn.ui-button,
    .success-btn > .ui-button,
    .ui-splitbutton.success-btn > .ui-button,
    .ui-button.ui-state-default.ui-button-success,
    .ui-buttonset.ui-button-success > .ui-button.ui-state-default {
        color: $successButtonTextColor;
        background-color: $successButtonBgColor;
        border-color: $successButtonBorderColor;

        &:enabled:hover {
            background-color: $successButtonHoverBgColor;
            border-color: $successButtonHoverBorderColor;
        }

        &:enabled:focus {
            outline: 0 none;
            @include shadow(0 0 0 0.2rem $successButtonFocusBorderShadow);
        }

        &:enabled:active  {
            background-color: $successButtonActiveBgColor;
            border-color: $successButtonActiveBorderColor;
        }
    }

    .info-btn.ui-button,
    .info-btn > .ui-button,
    .ui-splitbutton.info-btn > .ui-button,
    .ui-button.ui-state-default.ui-button-info,
    .ui-buttonset.ui-button-info > .ui-button.ui-state-default {
        color: $infoButtonTextColor;
        background-color: $infoButtonBgColor;
        border-color: $infoButtonBorderColor;

        &:enabled:hover {
            background-color: $infoButtonHoverBgColor;
            border-color: $infoButtonHoverBorderColor;
        }

        &:enabled:focus {
            outline: 0 none;
            @include shadow(0 0 0 0.2rem $infoButtonFocusBorderShadow);
        }

        &:enabled:active  {
            background-color: $infoButtonActiveBgColor;
            border-color: $infoButtonActiveBorderColor;
        }
    }

    .warning-btn.ui-button,
    .warning-btn > .ui-button,
    .ui-splitbutton.warning-btn > .ui-button,
    .ui-button.ui-state-default.ui-button-warning,
    .ui-buttonset.ui-button-warning > .ui-button.ui-state-default {
        color: $warningButtonTextColor;
        background-color: $warningButtonBgColor;
        border-color: $warningButtonBorderColor;

        &:enabled:hover {
            background-color: $warningButtonHoverBgColor;
            border-color: $warningButtonHoverBorderColor;
        }

        &:enabled:focus {
            outline: 0 none;
            @include shadow(0 0 0 0.2rem $warningButtonFocusBorderShadow);
        }

        &:enabled:active  {
            background-color: $warningButtonActiveBgColor;
            border-color: $warningButtonActiveBorderColor;
        }
    }

    .danger-btn.ui-button,
    .danger-btn > .ui-button,
    .ui-splitbutton.danger-btn > .ui-button,
    .ui-button.ui-state-default.ui-button-danger,
    .ui-buttonset.ui-button-danger > .ui-button.ui-state-default {
        color: $dangerButtonTextColor;
        background-color: $dangerButtonBgColor;
        border-color: $dangerButtonBorderColor;

        &:enabled:hover {
            background-color: $dangerButtonHoverBgColor;
            border-color: $dangerButtonHoverBorderColor;
        }

        &:enabled:focus {
            outline: 0 none;
            @include shadow(0 0 0 0.2rem $dangerButtonFocusBorderShadow);
        }

        &:enabled:active  {
            background-color: $dangerButtonActiveBgColor;
            border-color: $dangerButtonActiveBorderColor;
        }
    }

    .light-btn.ui-button,
    .light-btn > .ui-button,
    .ui-splitbutton.light-btn > .ui-button,
    .ui-button.ui-state-default.ui-button-light,
    .ui-buttonset.ui-button-light > .ui-button.ui-state-default  {
        color: $lightButtonTextColor;
        background-color: $lightButtonBgColor;
        border-color: $lightButtonBorderColor;

        &:enabled:hover {
            background-color: $lightButtonHoverBgColor;
            border-color: $lightButtonHoverBorderColor;
        }

        &:enabled:focus {
            outline: 0 none;
            @include shadow(0 0 0 0.2rem $lightButtonFocusBorderShadow);
        }

        &:enabled:active  {
            background-color: $lightButtonActiveBgColor;
            border-color: $lightButtonActiveBorderColor;
        }
    }

    .dark-btn.ui-button,
    .dark-btn > .ui-button,
    .ui-splitbutton.dark-btn > .ui-button,
    .ui-button.ui-state-default.ui-button-dark,
    .ui-buttonset.ui-button-dark > .ui-button.ui-state-default {
        color: $darkButtonTextColor;
        background-color: $darkButtonBgColor;
        border-color: $darkButtonBorderColor;

        &:enabled:hover {
            background-color: $darkButtonHoverBgColor;
            border-color: $darkButtonHoverBorderColor;
        }

        &:enabled:focus {
            outline: 0 none;
            @include shadow(0 0 0 0.2rem $darkButtonFocusBorderShadow);
        }

        &:enabled:active  {
            background-color: $darkButtonActiveBgColor;
            border-color: $darkButtonActiveBorderColor;
        }
    }

    .ui-button-rounded {
        @include border-radius($roundedButtonBorderRadius);
    }


    .ui-fluid {
        .ui-button-icon-only {
            width: 2.143em;
        }
    }

    .ui-chkbox {
        display: inline-block;
        vertical-align: middle;
        margin: 0;
        width: auto;
        height: auto;

        .ui-chkbox-box {
            border: 1px solid $inputBorderColor;
            background-color: $inputBgColor;
            width: 20px;
            height: 20px;
            text-align: center;
            @include input-shadow();
            @include transition(border-color $transitionDuration, background-color $transitionDuration, box-shadow $transitionDuration);

            &.ui-state-hover {
                border: 1px solid $inputHoverBorderColor;
            }

            &.ui-state-focus {
                color: $primaryColor;
                @include focused-input();
            }

            &.ui-state-active {
                border: 1px solid $primaryColor;
                background-color: $primaryColor;
                color: $primaryTextColor;

                &.ui-state-focus {
                    color: $primaryTextColor;
                }
            }

            &.ui-state-disabled {
                background-color: $disabledBgColor;
                border-color: $inputBorderColor;
                color: $textSecondaryColor;
            }

            .ui-chkbox-icon {
                display: inline-block;
                margin-top: 1px;
                margin-left: 1px;
                font-size: $fontSize + 2;
            }
        }
    }

    .ui-chkbox-label {
        margin: 0 0 0 .5em;
    }

    .ui-chips {
        > ul.ui-inputtext {
            padding: 0.286em 0.857em;
            display: inline-block;

            &:not(.ui-state-disabled).ui-state-focus {
                @include focused-input();
            }

            .ui-chips-input-token {
                padding: 0.143em 0.857em 0.143em 0;
                vertical-align: top;

                input {
                    font-family: $fontFamily;
					color: $inputTextColor;
                    font-size: $fontSize;
                    padding: 0;
                    margin: 0;

                    &:hover {
                        border: 0 none;
                    }

                    &:focus {
                        border: 0 none;
                    }
                }
            }

            .ui-chips-token {
                margin-right: .25em;
                font-size: $fontSize;
            }
        }
    }

    .ui-radiobutton {
        display: inline-block;
        vertical-align: middle;
        margin: 0;
        width: auto;
        height: auto;

        .ui-radiobutton-box {
            border: 1px solid $inputBorderColor;
            background-color: $inputBgColor;
            width: 20px;
            height: 20px;
            line-height: 18px;
            text-align: center;
            @include input-shadow();
            @include transition(border-color $transitionDuration,box-shadow $transitionDuration);
            @include border-radius(50%);

            &.ui-state-hover {
                border: 1px solid $inputHoverBorderColor;
            }

            &.ui-state-focus {
                @include focused-input();

                .ui-radiobutton-icon.ui-icon-bullet {
                    background-color: $primaryColor;
                }
            }

            &.ui-state-active {
                border: 1px solid $primaryColor;

                .ui-radiobutton-icon {
                    background-color: $primaryColor;
                }
            }

            .ui-radiobutton-icon {
                position: initial;
                width: 10px;
                height: 10px;
                margin-left: 0;
                background-color: transparent;
                display: inline-block;
                @include transition(background-color $transitionDuration);
                @include border-radius(50%);

                &:before {
                    display: none;
                }
            }

            &.ui-state-disabled {
                background-color: $disabledBgColor;
                border-color: $inputBorderColor;

                &.ui-state-active {
                    .ui-radiobutton-icon {
                        background-color: $textSecondaryColor;
                    }
                }
            }
        }
    }

    .ui-radiobutton-label {
        margin: 0 0 0 .5em;
    }

    .ui-inputswitch {
		height: 24px;
		width: 3.5em;
        @include transition(background-color $transitionDuration, border-color $transitionDuration, box-shadow $transitionDuration);

        .ui-inputswitch-slider {
			background-color:$toggleButtonBgColor;
			color: $textColor;
			border: 1px solid $toggleButtonBorderColor;
            @include border-radius(4px);
            @include transition(background-color .3s);

            &:before {
                background-color: $contentBgColor;
                border: 1px solid transparent;
                height: 1.429em;
                width: calc(3em / 2);
                left: 0;
                bottom: 0;
                border-radius: 0;
                @include border-radius-left(3px);
                @include transition(.3s);
            }
        }

        &.ui-inputswitch-checked {
            .ui-inputswitch-slider:before {
                @include translateX(calc(2em - 4px));
                @include translateXForIE(2em, -4px);
            }
        }

        &.ui-inputswitch-focus {
            .ui-inputswitch-slider {
                @include focused-input();
            }
        }

        &.ui-inputswitch-checked {
            .ui-inputswitch-slider {
				background-color: $primaryColor;
				color: $highlightTextColor;

                &:before {
                    border-radius: 0;
                    @include border-radius-right(3px);
                }
            }

            &:not(.ui-state-disabled):hover {
                .ui-inputswitch-slider {
					background-color: $primaryColor;
                }
            }

            &.ui-inputswitch-focus {
                .ui-inputswitch-slider {
					background-color: $primaryColor;
                }
            }
        }
    }

    .ui-autocomplete {
        .ui-autocomplete-dropdown {
            width: 2em;
            padding: .06em;
            border-left: 0 none;

            &:enabled:focus {
                outline: 0 none;
            }

            &.ui-button-icon-only {
                .ui-button-text {
                    padding: 0.385em;
                }
            }
        }

        &.ui-autocomplete-multiple {
            .ui-autocomplete-multiple-container {
                padding: 0.286em 0.857em;

                &:not(.ui-state-disabled).ui-state-focus {
                    @include focused-input();
                }

                .ui-autocomplete-input-token {
                    padding: 0.143em 0.857em 0.143em 0;
                    vertical-align: top;

                    input {
                        font-family: $fontFamily;
                        font-size: $fontSize;
                        padding: 0;
                        margin: 0;
                    }
                }

                .ui-autocomplete-token {
                    margin-right: .25em;
                    font-size: $fontSize;
                }
            }

            &.ui-autocomplete-dd {
                &.ui-autocomplete-multiple-container {
                    border-right: 0 none;

                    &:not(.ui-state-disabled).ui-state-focus {

                        border-right: 0 none;
                    }
                }
            }
        }
    }

    .ui-autocomplete-panel {
        @include overlay();

        .ui-autocomplete-items {
            padding: 5px 0;

            .ui-autocomplete-list-item {
                margin: 0;
                padding: $listItemPadding;
				line-height: 1;
                @include border-radius(0);
            }

            .ui-autocomplete-group {
                padding: $listItemPadding;
                background-color: $dividerColor;
                color: $textColor;
            }
        }
    }

    .ui-fluid {
        .ui-autocomplete-multiple.ui-autocomplete-dd {
            .ui-autocomplete-multiple-container {
                border-right: 0 none;
                width: calc(100% - 2em);
            }
        }

        .ui-autocomplete-dd {
            .ui-inputtext {
                border-right: 0 none;
                width: calc(100% - 2em);
            }
        }
    }

    .ui-dropdown {
        @include transition(box-shadow $transitionDuration, border-color $transitionDuration);
        @include box-sizing(border-box);
        border: 1px solid $inputBorderColor;
        min-width: 10em;

        .ui-dropdown-label:focus,
        .ui-dropdown-label:hover {
            border: 0 none;
        }

        input.ui-dropdown-label:focus,
        input.ui-dropdown-label:hover {
            &.ui-inputtext {
                border: 0 none;
            }
        }

        .ui-dropdown-clear-icon {
            right: 2.7em !important;
        }

        .ui-dropdown-trigger {
            background-color: $inputBgColor;
            width: 2em;
            line-height: 2em;
            text-align: center;
            padding: 0;

            .pi-caret-down {
                color: $textColor;
                line-height: inherit;
                margin-top: -1em;
            }
        }

        &:not(.ui-state-disabled).ui-state-focus {
            @include focused-input();

            .ui-dropdown-trigger {
                .pi-caret-down {
                    color: $primaryColor;
                }
            }
        }

        &.ui-state-disabled {
            > * {
                @include disabled-input();
            }
        }
    }

    .ui-dropdown-panel {
        @include overlay();

        .ui-dropdown-filter-container {
            padding: $headerPadding;

            .ui-dropdown-filter {
                width: 100%;
                box-sizing: border-box;
                padding-right: 20px;
            }

            .pi {
                top: 12px;
                right: 15px;
            }
        }

        .ui-dropdown-items {
			padding: $listPadding;

            .ui-dropdown-item {
                margin: 0;
                padding: $listItemPadding;
                @include border-radius(0);
                line-height: 1;

                &:not(.ui-state-highlight):not(.ui-state-disabled):hover {
                    @include list-item-hover();
                }

                > td {
                    padding: $listItemPadding;
                }
            }
        }
    }

    .ui-multiselect {
        background: $inputBgColor;
        border: 1px solid $inputBorderColor;
        @include transition(border-color $transitionDuration, box-shadow $transitionDuration);

        .ui-multiselect-label {
            color: $textColor;
            padding: $inputPadding;
            padding-right: 2.3em;
        }

        .ui-multiselect-trigger {
            width: 2em;
            line-height: 2em;
            padding: 0;
            text-align: center;
            @include box-sizing(border-box);

            .pi {
                color: $textColor;
            }
        }

        &:not(.ui-state-disabled).ui-state-focus {
			@include focused-input();

            .ui-multiselect-trigger {
                .pi {
                    color: $primaryColor;
                }
            }
        }

        &.ui-state-disabled {
            > * {
                @include disabled-input();
            }
        }
    }

    .ui-multiselect-panel {
        padding: 0;
        min-width: 12em;
        border: grey;
        @include overlay();

        .ui-multiselect-header {
            padding: $headerPadding;
			padding-left: 20px;
			padding-right: 20px;
            border: 0 none;
            border-bottom: 1px solid $headerBorderColor;
            margin-bottom: 0;
			@include border-radius(0);

            .ui-multiselect-filter-container {
                float: none;
                width: 70%;
                display: inline-block;
                vertical-align: middle;
                margin-left: 0;

                .ui-inputtext {
                    padding: .2em;
                    width: 100%;
                    box-sizing: border-box;
                    text-indent: 1.5em;
                }

                .pi {
                    color: $textSecondaryColor;
                    top: .2em;
                    left: 0.2em;
                }
            }

            .ui-chkbox {
                margin-right: 8px;
                float: none;
                vertical-align: middle;

                .ui-chkbox-box {
                    &.ui-state-active {
                        border-color: $headerIconColor;
                    }
                }
            }

            .ui-multiselect-close {
                color: $headerIconColor;
                font-size: $fontSize + 4;
                margin: 0;
                margin-top: -.1em;
                padding: 0;
                @include transition(color $transitionDuration);

                &:hover {
                    padding: 0;
                    color: $headerIconHoverColor;
                }

                &:focus {
                    outline: 0 none;
                    color: $headerIconHoverColor;
                }
            }
        }

        .ui-multiselect-items-wrapper {
            padding: 0;
        }

        .ui-multiselect-items {
            padding: 0.357em 0;

            .ui-multiselect-item {
                padding: $listItemPadding;
                @include border-radius(0);

                .ui-chkbox {
                    position: static;
                    margin-top: 0;
                    display: inline-block;
                    vertical-align: middle;
                }

                > span {
                    padding: 0;
                    margin: 0 0 0 0.615em;
                    display: inline-block;
                    vertical-align: middle;
                }

                &:not(.ui-state-highlight):not(.ui-state-disabled):hover {
                    border-radius: 0;
                    @include list-item-hover();
                }
            }
        }
    }
    .ui-listbox {
        padding: 0;
        min-width: 12em;

        .ui-corner-all {
            @include border-radius(0);
        }

        .ui-chkbox {
            margin-right: 0.615em;
        }

        .ui-listbox-header {
            padding: $headerPadding;
            margin: 0;
            background: $headerBgColor;
            border: 0 none;
            border-bottom: 1px solid $inputBorderColor;
            @include border-radius(4px);
            border-bottom-right-radius: 0;
            border-bottom-left-radius: 0;

            .ui-chkbox {
                margin-left: .358em;
            }

            .ui-listbox-filter-container {
                width: calc(100% - 3em);

                .pi {
                    color: $textSecondaryColor;
                    top: .4em;
                }

                input {
                    width: 100%;
                    padding: $inputPadding;
                    text-indent: 1em;
                }
            }
        }

        .ui-listbox-list {
            padding: 0.357em 0;
        }

        .ui-listbox-item {
            margin: 0;
            padding: $listItemPadding;
            @include border-radius(0);

            &.ui-state-highlight {
				@include highlight();
            }

            > td {
                padding: $listItemPadding;
            }
        }

        &:not(.ui-state-disabled) {
            .ui-listbox-item {
                &:not(.ui-state-highlight):hover {
                    @include list-item-hover();
                }
            }
        }

        &.ui-state-disabled {
            .ui-chkbox-box {
                background-color: $disabledBgColor;
                border-color: $inputBorderColor;
                color: $textSecondaryColor;

                &:not(.ui-state-disabled):not(.ui-state-active):hover {
                    border: 1px solid $inputBorderColor;
                }
            }
        }
    }

    .ui-editor-container {
        .ui-editor-toolbar {
            background-color: $headerBgColor;
        }

        .ql-picker.ql-expanded {
            .ql-picker-label {
                color: #444444;
            }
        }
    }

    .ui-rating {
        a {
            color: $primaryColor;
            text-align: center;
            cursor: pointer;
            display: inline-block;
            border-bottom: 1px solid transparent;

            &:focus {
                outline: 0 none;
            }

            .pi {
                font-size: 25px;
                height: 25px;
                width: 25px;

                &.pi-ban {
                    color: $ratingStarColor;

                    &:hover {
                        color: lighten($ratingStarColor,5%);
                    }
                }
            }
        }

        &.ui-state-disabled {
            background: transparent;

            a {
                color: $disabledBgColor;

                .pi.pi-ban {
                    color: $disabledBgColor;
                }
            }
        }
    }

    .ui-spinner {
        input {
            padding-right: 1.8em;
        }

        .ui-spinner-button {
            &.ui-button {
                z-index: auto;
                background-color: transparent;
                color: $textSecondaryColor;

                &:not(.ui-state-disabled):hover {
                    color: $textColor;
                }

                &:not(.ui-state-disabled):focus {
                    color: $textColor;
                }

                &:not(.ui-state-disabled):active {
                    color: $textColor;
                    @include no-shadow();
                }

                &.ui-spinner-up {
                    top: 1px;
                    right: 1px;
                }

                &.ui-spinner-down {
                    bottom: 1px;
                    right: 1px;
                }
            }
        }
    }

    .ui-fluid {
        .ui-spinner {
            .ui-spinner-button {
                .ui-spinner-button-icon {
                    left:inherit;
                }

            }
        }
    }

    .ui-slider {
        background-color: $dividerColor;
        border-color: $dividerColor;

        &.ui-slider-horizontal {
            .ui-slider-handle {
                top: -.25em;
            }
        }

        &.ui-slider-vertical {
            .ui-slider-handle {
                left: -.25em;
            }
        }

        .ui-slider-handle {
            background-color: $primaryColor;
            @include transition(background-color $transitionDuration);
            @include border-radius(50%);
        }

        .ui-slider-range {
            background-color: lighten($primaryColor,15%);
        }

        &:not(.ui-state-disabled) {
            .ui-slider-handle:hover {
                background-color: darken($primaryColor,5%);
                @include transition(box-shadow $transitionDuration);
                @include focused-input();
                border: 0 none;
            }
        }

        &.ui-state-disabled {
            .ui-slider-handle {
                background-color: $disabledBgColor;
            }

            .ui-slider-range {
                background-color: darken($dividerColor, 5%);
            }
        }
    }

    .ui-togglebutton {
        background-color: $toggleButtonBgColor;
        color: $textColor;
        border: 1px solid $toggleButtonBorderColor;
        @include transition(border-color $transitionDuration);

        &:not(.ui-state-disabled):not(.ui-state-active) {
            &:hover, &.ui-state-focus {
                background-color: $toggleButtonHoverBgColor;
                border-color: $toggleButtonHoverBorderColor;
            }
            &.ui-state-focus {
                @include focused-input();
            }
        }

        &.ui-state-active {
            background-color: $primaryColor;
            color: $primaryTextColor;
            border-color: darken($primaryColor, 5%);

            &.ui-state-focus {
                background-color: darken($primaryColor, 5%);
                @include focused-input();
            }
        }

        &.ui-state-disabled {
            background-color: $disabledBgColor;
            @include opacity(.65);

            &.ui-state-active {
                background-color: $primaryColor;
            }
        }
    }

    .ui-selectbutton {
        .ui-button {
            background-color: $toggleButtonBgColor;
            color: $textColor;
            border: 1px solid $toggleButtonBorderColor;
            border-right-width: 0;
            @include border-radius(0px);
            @include transition(border-color $transitionDuration);

            &:not(.ui-state-disabled):not(.ui-state-active) {
                &:hover, &.ui-state-focus {
                    background-color: $toggleButtonHoverBgColor;
                    border-color: $toggleButtonHoverBorderColor;

                    + .ui-button:not(.ui-state-disabled):not(.ui-state-active) {
                        border-left-color: $toggleButtonHoverBorderColor;
                    }
                }
                &.ui-state-focus {
                    z-index: 1;
                    @include focused-input();
                }
            }

            &.ui-state-active {
                background-color: $primaryColor;
                color: $primaryTextColor;
                border-color: darken($primaryColor, 5%);

                &.ui-state-focus {
                    background-color: darken($primaryColor, 5%);
                    @include focused-input();
					z-index: 1;
                }
            }

            &:first-child {
                @include border-radius-left($borderRadius);
            }

            &:last-child {
                @include border-radius-right($borderRadius);
                border-right-width: 1px;
            }
        }
    }

    @media (max-width: 640px) {
        .ui-buttonset {
            .ui-button {
                margin-bottom: 1px;
                @include border-radius($borderRadius);
            }
        }
    }

    .ui-splitbutton.ui-buttonset {
        @include border-radius($borderRadius);

        .ui-button {
			color: $primaryButtonTextColor;
			background-color: $primaryButtonBgColor;
			border: 1px solid $primaryButtonBorderColor;
			@include transition(background-color $transitionDuration,box-shadow $transitionDuration);

            &:enabled:focus {
                outline: 0 none;
                @include shadow(0 0 0 0.2rem $primaryButtonFocusBorderShadow);
            }

            &:enabled:active {
                background-color: $primaryButtonActiveBgColor;
                border-color: $primaryButtonActiveBorderColor;
            }

            &:enabled:hover {
                background-color: $primaryButtonHoverBgColor;
                border-color: $primaryButtonHoverBorderColor;
            }

            &.ui-state-disabled, &:disabled {
                background-color: $primaryColor;
                @include opacity(.65);
            }
		}

        .ui-menu {
            width: 100%;
            min-width: 12.5em;
        }
    }

    .ui-datepicker {
        padding: 0;
        width: 18.571em;

        .ui-datepicker-buttonbar {
            .ui-button {
                color: $primaryButtonTextColor;
                background-color: $primaryButtonBgColor;
                border: 1px solid transparent;
                font-size: $fontSize;
                @include transition(background-color $transitionDuration,box-shadow $transitionDuration);

                &:enabled:focus {
                    outline: 0 none;
                    @include shadow(0 0 0 0.2rem $primaryButtonFocusBorderShadow);
                }

                &:enabled:active {
                    background-color: $primaryButtonActiveBgColor;
                    border-color: $primaryButtonActiveBorderColor;
                }

                &:enabled:hover {
                    background-color: $primaryButtonHoverBgColor;
                    border-color: $primaryButtonHoverBorderColor;
                }
            }
        }

        &:not(.ui-datepicker-inline) {
            border: 1px solid $inputBorderColor;
        }

        &:not(.ui-state-disabled) {
            .ui-datepicker-header {
                .ui-datepicker-prev,
                .ui-datepicker-next {
                    &:hover {
                        color: $headerIconHoverColor;
                    }

                    &:focus {
                        outline: 0 none;
                        color: $headerIconHoverColor;
                    }
                }
            }

            table {
                td:not(.ui-state-disabled) {
                    a:not(.ui-state-active):not(.ui-state-highlight):hover {
                        background-color: $listItemHoverBgColor;
                    }
                }
            }

            .ui-monthpicker {
                a.ui-monthpicker-month:not(.ui-state-active):hover {
                    background-color: $listItemHoverBgColor;
                }
            }
        }

        .ui-datepicker-group {
            @include border-radius(4px);
        }

        .ui-datepicker-header {
            padding: $headerPadding;
            border-top: 0;
            border-left: 0;
            border-right: 0;
            @include border-radius(0);
			@include border-radius-top($borderRadius);

            .ui-datepicker-prev {
                cursor: pointer;
                top: 0.714em;
                color: $headerIconColor;
                @include transition(color $transitionDuration);
            }

            .ui-datepicker-next {
                cursor: pointer;
                top: 0.714em;
                color: $headerIconColor;
                @include transition(color $transitionDuration);
            }
        }

        table {
            font-size: $fontSize;

            td {
                padding: 2px;

                > a, > span {
                    min-width: 2em;
                    min-height: 2em;
                    text-align: center;
                    color: $textColor;
                    padding: .35em;
                    @include border-radius($borderRadius);
					@include transition(box-shadow $transitionDuration);
                }

                > a {
                    cursor: pointer;

                    &:hover {
                        background-color: $listItemHoverBgColor;
                    }

                    &.ui-state-active {
						color: $highlightTextColor;
						background-color: $highlightBgColor;
                    }

                    &.ui-state-highlight {
						color: $highlightTextColor;
						background-color: $highlightBgColor;
                    }
					&:focus {
						@include focused-input();
					}
                }

                &.ui-datepicker-today {
                    a {
                        background-color: $dividerColor;
                        color: $textColor;

                        &.ui-state-active {
                            color: $highlightTextColor;
                            background-color: $highlightBgColor;
                        }
                    }
                }
            }
        }

        .ui-timepicker {
            border: 0 none;
            border-top: 1px solid $contentBorderColor;

            a {
                color: $headerIconColor;

                &:hover {
                    color: $headerIconHoverColor;
                }
            }
        }

        .ui-monthpicker {
            .ui-monthpicker-month {
                color: $textColor;

                &.ui-state-active {
					color: $primaryTextColor;
					background-color: $primaryColor;
                }
            }
        }

        &.ui-datepicker-multiple-month {
            width: auto;
            .ui-datepicker-group {
                border-right: 1px solid $contentBorderColor;
                padding-top: 0;
                padding-bottom: 0;

                .ui-datepicker-calendar-container {
                    tbody {
                        padding-right: .25em;
                        padding-left: .25em;
                    }
                }

                &:first-child {
                    padding-left: 0;
                }

                &:last-child {
                    padding-right: 0;
                    border-right: 0 none;
                }
            }
        }
    }

    .ui-calendar.ui-calendar-w-btn {
        .ui-inputtext {
            @include border-radius-right(0);
            border-right: 0 none;

            &:enabled:hover:not(.ui-state-error),
            &:enabled:focus:not(.ui-state-error) {
                border-right: 0 none;
            }
        }
        .ui-datepicker-trigger.ui-button {
            width: 2em;
            @include border-radius-left(0);

            &.ui-state-disabled {
                border-color: $inputBorderColor;

                .pi {
                    color: $textSecondaryColor;
                }
            }
        }
    }

    .ui-inplace {
        .ui-inplace-display {
            padding: $inputPadding;
            @include border-radius($borderRadius);

            &:not(.ui-state-disabled):hover {
                @include list-item-hover();
            }
        }
    }

    .ui-fileupload {
        .ui-fileupload-buttonbar {
            padding: $headerPadding;
            border-bottom: 0 none;

            .ui-button {
                margin-right: 8px;
            }
        }

        .ui-progressbar {
            top: 0;
        }
    }

    .ui-fileupload-choose:not(.ui-state-disabled):hover,
    .ui-fileupload-choose.ui-state-focus {
        background-color: darken($primaryColor, 5%);
    }

    .ui-fileupload-choose:not(.ui-state-disabled):active {
        background-color: darken($primaryColor, 10%);
    }

    .ui-password-panel {
        @include overlay();
    }

    .ui-inputgroup {
        .ui-inputgroup-addon {
            border-color: $inputGroupBorderColor;
            background-color: $inputGroupBgColor;
            padding: $inputPadding;

            &:first-child {
                @include border-radius-left($borderRadius);
            }

            &:last-child {
                @include border-radius-right($borderRadius);
            }

            &.ui-inputgroup-addon-checkbox, &.ui-inputgroup-addon-radiobutton {
                padding: 0.286em 0.857em;
            }
        }

        .ui-button {
            &:first-child {
                @include border-radius-left($borderRadius);
            }

            &:last-child {
                @include border-radius-right($borderRadius);
            }
        }
    }

    .ui-calendar .ui-datepicker {
        min-width: auto;
    }

    .ui-datepicker{
        width: auto;
    }

    ::-webkit-input-placeholder {color:$textSecondaryColor}
    :-moz-placeholder           {color:$textSecondaryColor}
    ::-moz-placeholder          {color:$textSecondaryColor}
    :-ms-input-placeholder      {color:$textSecondaryColor}

    /* Validations */
    .ui-inputtext.ng-dirty.ng-invalid,
    p-dropdown.ng-dirty.ng-invalid > .ui-dropdown,
    p-autocomplete.ng-dirty.ng-invalid > .ui-autocomplete > .ui-inputtext,
    p-calendar.ng-dirty.ng-invalid > .ui-calendar > .ui-inputtext,
    p-chips.ng-dirty.ng-invalid > .ui-inputtext,
    p-inputmask.ng-dirty.ng-invalid > .ui-inputtext,
    p-checkbox.ng-dirty.ng-invalid .ui-chkbox-box,
    p-radiobutton.ng-dirty.ng-invalid .ui-radiobutton-box,
    p-inputswitch.ng-dirty.ng-invalid .ui-inputswitch,
    p-listbox.ng-dirty.ng-invalid .ui-inputtext,
    p-multiselect.ng-dirty.ng-invalid > .ui-multiselect,
    p-spinner.ng-dirty.ng-invalid > .ui-inputtext,
    p-selectbutton.ng-dirty.ng-invalid .ui-button,
    p-togglebutton.ng-dirty.ng-invalid .ui-button {
        border-color: $errorColor;
    }

}
